name: Upload and Delete Artifact Workflow

on: [push]

jobs:
  jobA:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Job A
        run: |
          echo "Creating an artifact"
          echo "This is a sample file" > sample.txt

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: sample-artifact
          path: sample.txt

  jobB:
    runs-on: ubuntu-latest
    needs: jobA
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: sample-artifact

      - name: Use artifact in Job B
        run: |
          cat sample.txt

  jobC:
    runs-on: ubuntu-latest
    needs: jobA
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: sample-artifact

      - name: Use artifact in Job C
        run: |
          cat sample.txt

  jobD:
    runs-on: ubuntu-latest
    needs: jobA
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: sample-artifact

      - name: Use artifact in Job D
        run: |
          cat sample.txt

  jobCleanup:
    runs-on: ubuntu-latest
    needs: [jobA, jobB, jobC, jobD]
    steps:
      - name: Get artifact ID
        id: get_artifact_id
        run: |
          echo "Getting artifact ID"
          ARTIFACT_ID=$(curl -s -H "Authorization: token ${{ secrets.PAT }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/artifacts" \
            | jq -r '.artifacts[] | select(.name == "sample-artifact") | .id')
          echo "Artifact ID: $ARTIFACT_ID"  # Debugging output
          echo "ARTIFACT_ID=${ARTIFACT_ID}" >> $GITHUB_ENV

      - name: Delete artifact
        run: |
          echo "Deleting artifact"
          if [ -n "${{ env.ARTIFACT_ID }}" ]; then
            RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -X DELETE -H "Authorization: token ${{ secrets.PAT }}" \
              "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/${{ env.ARTIFACT_ID }}")
            echo "Response Code: $RESPONSE"  # Debugging output
            if [ "$RESPONSE" -ne 204 ]; then
              echo "Failed to delete artifact. HTTP response code: $RESPONSE"
              exit 1
            fi
          else
            echo "Artifact ID not found or empty"
            exit 1
          fi
