name: Android Emulator Test on Windows

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: dev  # Specify the Dev branch

    - name: Initialize Chocolatey
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
        refreshenv  # Refresh environment variables after installing Chocolatey
      shell: powershell

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'

    - name: Set JAVA_HOME
      run: echo "JAVA_HOME=${{ steps.setup-java.outputs.path }}" >> $GITHUB_ENV

    - name: Set up Android SDK
      run: choco install -y android-sdk
      shell: powershell
      env:
        JAVA_HOME: ${{ steps.setup-java.outputs.path }}

    - name: Set up Android Emulator
      run: |
        echo y | "%ANDROID_HOME%\tools\bin\sdkmanager" "platform-tools" "platforms;android-30" "emulator" "system-images;android-30;google_apis;x86_64"
      env:
        JAVA_HOME: ${{ steps.setup-java.outputs.path }}
        ANDROID_HOME: ${{ env.ANDROID_HOME }}

    - name: Create AVD
      run: |
        "%ANDROID_HOME%\tools\bin\avdmanager" create avd -n test -k "system-images;android-30;google_apis;x86_64" --device "Nexus 6"
      env:
        JAVA_HOME: ${{ steps.setup-java.outputs.path }}
        ANDROID_HOME: ${{ env.ANDROID_HOME }}

    - name: Start emulator
      run: |
        start /B emulator -avd test -no-window -no-snapshot -no-boot-anim -no-audio
        adb wait-for-device
        adb shell input keyevent 82
      env:
        JAVA_HOME: ${{ steps.setup-java.outputs.path }}
        ANDROID_HOME: ${{ env.ANDROID_HOME }}

    - name: Install Maven
      run: choco install -y maven
      env:
        JAVA_HOME: ${{ steps.setup-java.outputs.path }}

    - name: Install dependencies
      run: mvn clean install -DskipTests
      env:
        JAVA_HOME: ${{ steps.setup-java.outputs.path }}

    - name: Start Appium server
      run: npx appium --relaxed-security &
      env:
        JAVA_HOME: ${{ steps.setup-java.outputs.path }}

    - name: Run tests
      run: mvn test
      env:
        JAVA_HOME: ${{ steps.setup-java.outputs.path }}
