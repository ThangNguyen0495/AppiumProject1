name: '[GoSELLER] Create product test'

on:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  setup-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Android Emulator
        uses: ThangNguyen0495/Customs@v1.0.5
        with:
          sdk-version: '33'
          java-version: '22'
          avd-name: 'test'

#jobs:
#  test:
#    env:
#      CI: true
#      ANDROID_AVD: emulator
#      APPIUM_TEST_SERVER_PORT: 4723
#      APPIUM_TEST_SERVER_HOST: 0.0.0.0
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#        name: Checkout code
#
#      - name: Enable KVM group perms
#        run: |
#          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
#          sudo udevadm control --reload-rules
#          sudo udevadm trigger --name-match=kvm
#
#      - name: Set up JDK 22
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: '22'
#
#      - name: Enable KVM group perms
#        run: |
#          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
#          sudo udevadm control --reload-rules
#          sudo udevadm trigger --name-match=kvm
#
#      - name: Cache Android SDK
#        id: cache-android-sdk
#        uses: actions/cache@v3
#        with:
#          path: ${{ github.workspace }}/android-sdk
#          key: android-sdk-${{ runner.os }}-${{ hashFiles('**/build.gradle', '**/pom.xml', '**/*.sdk-version') }}-33
#
#      - name: Install Android SDK
#        if: steps.cache-android-sdk.outputs.cache-hit != 'true'
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y wget unzip
#          wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
#          mkdir -p $HOME/android-sdk/cmdline-tools
#          unzip commandlinetools-linux-8512546_latest.zip -d $HOME/android-sdk/cmdline-tools
#          mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/tools
#
#      - name: Set up environment variables
#        run: |
#          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
#          echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
#          echo "$ANDROID_HOME/cmdline-tools/tools/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator" >> $GITHUB_PATH
#          echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
#
#      - name: Check Ubuntu environment variables
#        run: |
#          echo $ANDROID_HOME
#          echo $PATH
#
#      - name: Accept Android SDK licenses
#        run: yes | $HOME/android-sdk/cmdline-tools/tools/bin/sdkmanager --licenses
#
#      - name: Install SDK packages
#        if: steps.cache-android-sdk.outputs.cache-hit != 'true'
#        run: |
#          $HOME/android-sdk/cmdline-tools/tools/bin/sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.0" "system-images;android-33;google_apis;x86_64" "emulator"
#      - name: Create Android emulator
#        run: |
#          echo "no" | $HOME/android-sdk/cmdline-tools/tools/bin/avdmanager create avd -n test -k "system-images;android-33;google_apis;x86_64" --device "pixel"
#      - name: Start Android emulator
#        run: |
#          nohup $HOME/android-sdk/emulator/emulator -avd test -no-snapshot-save -no-boot-anim -wipe-data -no-window -gpu off &
#          $ANDROID_HOME/platform-tools/adb wait-for-device
#      - name: Check list devices
#        run: |
#          $ANDROID_HOME/platform-tools/adb devices
#      - name: Set up Node.js
#        uses: actions/setup-node@v3
#        with:
#          node-version: '21'
#
#      - name: Install Appium
#        run: |
#          npm install -g appium
#      - name: Install Appium Doctor
#        run: |
#          npm install -g appium-doctor
#      - name: Check Android Config
#        run: |
#          appium-doctor --android
#
#      - name: Cache npm modules
#        uses: actions/cache@v3
#        with:
#          path: ~/.npm
#          key: npm-${{ hashFiles('**/package-lock.json') }}
#          restore-keys: |
#            npm-
#
#      - name: Start Appium server
#        run: |
#          appium driver install uiautomator2
#          nohup appium -a $APPIUM_TEST_SERVER_HOST -p $APPIUM_TEST_SERVER_PORT -pa /wd/hub > appium_log.txt 2>&1 &
#          tail -f appium_log.txt &
#
#      - name: Install dependencies
#        run: |
#          mvn install -DskipTests
#
#      - name: Run Appium tests with Maven
#        run: |
#            mvn test "-DsuiteFile=test_xml/android/createProductTest.xml" "-Dudid=emulator-5554" "-DappiumPort=${{ env.APPIUM_TEST_SERVER_PORT }}"
#
#      - name: Kill Android Emulator
#        run: |
#          adb devices
#          adb -s emulator-5554 emu kill
#
#      - name: Upload all recording .mp4 files
#        if: always()
#        uses: actions/upload-artifact@v3
#        with:
#          name: MP4 Files
#          path: '**/*.mp4'
#
#      - name: Upload Test Report
#        if: always()
#        uses: actions/upload-artifact@v3
#        with:
#          name: Test Reports
#          path: |
#            **/html/index.html
#            **/reportng.css
#            **/reportng.js
#            **/suite*_test*_results.html