name: '[IOS][GoSELLER] Create product test'

on:
  push:
    branches:
      - master

jobs:
  IOS-CreateProduct:
    uses: SMTG-04/Reusable/.github/workflows/iosAppiumConfigs.yml@main
    with:
      appium_port: "4723"
      test_name: "IOS-CreateProduct"
      test_config: "test_xml/iOS/createProductTest.xml"
#  build:
#    runs-on: macos-latest
#
#    env:
#      CI: true
#      APPIUM_TEST_SERVER_PORT: 4726
#      APPIUM_TEST_SERVER_HOST: 0.0.0.0
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#        with:
#          token: ${{ secrets.PAT }}
#
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: '22'
#
#      - name: Set up Node.js
#        uses: actions/setup-node@v3
#        with:
#          node-version: '16'
#
#      - name: Cache Node.js Modules
#        uses: actions/cache@v3
#        with:
#          path: ~/.npm
#          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#          restore-keys: |
#            ${{ runner.os }}-node-
#
#      - name: Install Appium
#        run: npm install -g appium
#
#      - name: Set APPIUM_HOME environment variable
#        run: echo "APPIUM_HOME=$(npm root -g)/appium" >> $GITHUB_ENV
#
#      - name: Verify APPIUM_HOME
#        run: echo "APPIUM_HOME is set to $APPIUM_HOME"
#
#      - name: Install Xcode command-line tools
#        run: xcode-select --install || true
#
#      - name: Install FFmpeg
#        run: brew install ffmpeg
#
#      - name: Verify FFmpeg Installation
#        run: ffmpeg -version
#
#      - name: Install Carthage
#        run: brew install carthage
#
#      - name: Save Homebrew Cache
#        if: steps.homebrew-cache.outputs.cache-hit != 'true'
#        uses: actions/cache@v3
#        with:
#          path: /usr/local/Homebrew
#          key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile') }}
#
#      - name: Cache Maven Dependencies
#        uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-
#
#      - name: Check available Xcode versions
#        run: ls /Applications/
#
#      - name: Set Xcode version
#        run: sudo xcode-select --switch /Applications/Xcode.app
#
#      - name: Check Runtime list
#        run: xcrun simctl list runtimes
#
#      - name: Start iOS Simulator
#        id: start_simulator
#        run: |
#          DEVICE_UDID=$(xcrun simctl create "iPhone-13" com.apple.CoreSimulator.SimDeviceType.iPhone-13 com.apple.CoreSimulator.SimRuntime.iOS-17-0)
#          xcrun simctl boot $DEVICE_UDID
#          echo "SIMULATOR_UDID=$DEVICE_UDID" >> $GITHUB_ENV
#          echo "The iOS Simulator UDID is $DEVICE_UDID"
#
#      - name: Install XCUITest driver
#        run: appium driver install xcuitest
#
#      - name: Start Appium server
#        run: |
#          appium driver doctor xcuitest
#          nohup appium -a $APPIUM_TEST_SERVER_HOST -p $APPIUM_TEST_SERVER_PORT -pa /wd/hub > appium_log.txt 2>&1 &
#
#      - name: Run WebDriverAgent Tests
#        run: |
#          cd $APPIUM_HOME/node_modules/appium-xcuitest-driver/node_modules/appium-webdriveragent
#          xcodebuild -project WebDriverAgent.xcodeproj \
#          -scheme WebDriverAgentRunner \
#          -destination 'id=$SIMULATOR_UDID' \
#          clean build test &
#
#
#      - name: Install dependencies
#        run: mvn install -DskipTests "-DudidIOS=$SIMULATOR_UDID"
#
#      - name: Run Tests
#        run: mvn test "-DsuiteFile=test_xml/iOS/createProductTest.xml" "-DudidIOS=$SIMULATOR_UDID" "-DappiumPort=$APPIUM_TEST_SERVER_PORT"
#
#      - name: View appium log
#        if: always()
#        run: cat appium_log.txt
#
#      - name: Upload all recording .mp4 files
#        if: always()
#        uses: actions/upload-artifact@v3
#        with:
#          name: MP4 Files
#          path: '**/*.mp4'
#
#      - name: Upload Test Report
#        if: always()
#        uses: actions/upload-artifact@v3
#        with:
#          name: Test Reports
#          path: |
#            **/html/index.html
#            **/reportng.css
#            **/reportng.js
#            **/suite*_test*_results.html

