name: Android Jobs

on:
  push:
    branches:
      - master

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - apiLevel: 29
            emuTag: google_apis
            arch: x86_64

    env:
      CI: true
      ANDROID_AVD: emulator
      APPIUM_TEST_SERVER_PORT: 4723
      APPIUM_TEST_SERVER_HOST: 127.0.0.1
      _FORCE_LOGS: 1
      TEST_PASS_THRESHOLD: 10

    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          check-latest: true

      - name: Install xq
        run: curl -sSL https://bit.ly/install-xq | sudo bash

      - name: Install development dependencies
        run: |
          npm install mocha-multi-reporters --save-dev
          npm install -g appium
          npm install --no-save mjpeg-consumer

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '22'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Cache AVD
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.apiLevel }}

#      - name: Create AVD and generate snapshot for caching
#        if: steps.avd-cache.outputs.cache-hit != 'true'
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          avd-name: ${{ env.ANDROID_AVD }}
#          force-avd-creation: false
#          api-level: ${{ matrix.apiLevel }}
#          disable-spellchecker: true
#          target: ${{ matrix.emuTag }}
#          emulator-options: -no-snapshot-save -no-boot-anim
#          arch: ${{ matrix.arch }}
#          disable-animations: true
#          script: echo "Generated AVD snapshot for caching."

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
            avd-name: ${{ env.ANDROID_AVD }}
            api-level: ${{ matrix.api-level }}
            force-avd-creation: false
            emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
            disable-animations: false
            script: echo "Generated AVD snapshot for caching."

      - name: List adb devices
        run: |
          adb devices
        continue-on-error: true

      - name: Start Appium server
        run: |
          nohup appium server \
            --port=$APPIUM_TEST_SERVER_PORT \
            --address=$APPIUM_TEST_SERVER_HOST \
            --relaxed-security \
            --log-no-colors \
            --log-timestamp \
            2>&1 > appium.log &

      - name: Capture logcat output
        run: nohup adb logcat > logcat.log &

      - name: Wait for Emulator to Boot
        run: |
          for i in {1..30}; do
            adb shell getprop sys.boot_completed && break || sleep 10
          done
        continue-on-error: true

      - name: Run Appium tests with Maven
        uses: reactivecircus/android-emulator-runner@v2
        with:
          script: |
            mvn clean test "-DsuiteFile=test_xml/android/createProductTest.xml" "-Dappium.server.port=$APPIUM_TEST_SERVER_PORT" "-Dappium.server.host=$APPIUM_TEST_SERVER_HOST"
          avd-name: ${{ env.ANDROID_AVD }}
          force-avd-creation: false
          api-level: ${{ matrix.apiLevel }}
          disable-spellchecker: true
          disable-animations: true
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
          target: ${{ matrix.emuTag }}
          arch: ${{ matrix.arch }}

      - name: Save logcat output
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: logcat-api${{ matrix.apiLevel }}
          path: logcat.log

      - name: Save Appium server logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: appium-api${{ matrix.apiLevel }}
          path: appium.log
